1.When would you want to use a remote repository rather than keeping all your work local?

Whenever you want to work on a project in a team of dispersed nature (not having the repository on the corporate network, international teams, etc.).
Also if you plan to use the repository form different machines for instance.

2.Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Usually we should commit each logical change in a project. As a large enterprise project can have many commits, it is not a good idea to stay up-to-date automatically (on each commit made to the repository)
as this would be time-consuming and slow.

3.Describe the differences between forks, clones, and branches. When would you use one instead of another?

A branch is part of a  repository. It contains commits grouped for a logical purpose (master, new feature...). Clone is an operation that downloads a repository to your local machine. A fork on the other hand copies a repository on GitHub from another GitHub repository.

4. What is the benefit of having a copy of the last known state of the remote stored locally?

You can fetch and merge changes from the remote made after the last known state (for example if you have been working in a team)

5.How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I would do it via a corporate network where we can share files and versions of files. It would be much easier in terms of speed (no commands to learn, no logic to learn, etc.) but it will get impossible to 
manage with a big enough project.

6.When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

Whenever you are adding a new feature/testing something new and you do not want to affect he master branch you can create a separate branch. The added benefit is that you can also make changes to the branch and then push them to Git Hub.
From there on you can create a "pull" request form GitHub directly so that your colleagues/supervisor can review and approve them. Using only a master branch is easier in terms of collaboration but definitely you loose the
approval and review process.
